{"version":3,"sources":["sun-putt.jpg","PageTitle.tsx","api.ts","Venues.tsx","engine.tsx","Games.tsx","Start.tsx","VenueSelector.tsx","Attempt.tsx","RoundHeader.tsx","Score.tsx","helpers.tsx","Play.tsx","CardHeader.tsx","Settings.tsx","ScrollToTop.tsx","GameDetails.tsx","VenueDetails.tsx","PercentPanel.tsx","Stats.tsx","PlayVirtual.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","root","paddingLeft","spacing","title","subtitle","classes","Fragment","Typography","variant","Storage","STORAGE_PREFIX","GAMES_KEY","SETTINGS_KEY","this","loadGames","filter","game","endTime","venueId","id","Date","getTime","result","buildInitResult","startTime","note","labels","addGame","writeGames","map","g","getGame","find","Error","get","darkMode","showFeet","showMetric","settings","set","getSettings","updateGame","localStorage","clear","layoutId","layout","key","k","bonusId","defaultValue","bonus","games","unshift","value","setItem","JSON","stringify","producer","data","getItem","parse","storage","venues","name","description","address","location","lon","lat","defaultBonus","longBonus","special","specialLayout","l","updateSpecialLayout","getSpecialBonus","v","setSpecialBonus","findVenue","match","venue","props","PageTitle","List","Divider","ListItem","button","component","Link","to","ListItemText","primary","secondary","join","Engine","positionIdx","flatMap","round","every","Boolean","roundIdx","attemptIdx","firstBonusPosition","lastBonusPosition","bonusPosition","bonusLevel","reduce","sum","i","roundSum","position","j","scoreAttempt","positionValue","fullRow","countBy","attempt","succcessCount","toFixed","firstPositionCount","lastPositionCount","bonusPositionCount","first","last","both","Array","_","idx","positionCount","count","Math","roundPercent","pct","pred","attemptSum","history","useHistory","useState","listGames","engine","onClick","push","scoreGame","toLocaleString","card","marginLeft","marginRight","marginBottom","useEffect","activeGame","Card","className","CardActionArea","CardMedia","alt","height","image","putter","CardContent","gutterBottom","color","CardActions","Button","size","window","assign","VenueSelector","onClose","open","Dialog","DialogTitle","roundShades","grey","darkEoundShades","backgroundColor","success","rowBonus","staticBackground","yellow","lightGreen","darkBackgroundColor","blue","green","swipeContainer","flexGrow","flexShrink","flexBasis","typography","width","borderWidth","borderStyle","borderColor","palette","background","default","type","score","onSwipe","swiping","setSwiping","onSwiped","event","done","onSwiping","abs","deltaX","preventDefaultTouchmoveEvent","ButtonBase","style","hidden","textAlign","paddingTop","visibility","text","hint","roundNumber","checked","Chip","label","clickable","icon","positionLabel","paddingRight","Play","useParams","setGame","confirm","useConfirm","fullRounds","fullRound","Box","display","flexDirection","RoundHeader","justifyContent","alignSelf","roundIx","Attempt","toggleAttempt","lastSuccess","toggleSelectPrevious","Toolbar","then","deleteGame","catch","resetGame","completeGame","Score","marginTop","CardHeader","Settings","React","setSettings","update","updateSettings","FormControl","FormLabel","FormGroup","FormControlLabel","control","Switch","onChange","toggleDarkMode","startIcon","resetAll","ScrollToTop","pathname","useLocation","scrollTo","scoreCard","gridRow","gridIcon","fontSize","gridIconSuccess","main","gridIconFail","error","gridLabel","cardHeader","divider","venueChip","margin","GameDetails","useTheme","matrix","positionPercentages","positionPercent","stat","Number","fill","bonusPercent","bonusPositionPercent","radarData","a","length","b","c","fullMark","roundPercents","row","col","clsx","successPercent","innerRadius","outerRadius","startAngle","endAngle","cx","top","right","bottom","left","domain","angleAxisId","tick","dataKey","legendType","iconSize","verticalAlign","align","String","angle","stroke","red","fillOpacity","wrapperStyle","PercentPanel","alignItems","cy","positionTableCell","padding","saveButton","input","VenueDetails","setLayout","short","long","bonuses","setBonuses","handlePositionChange","newValue","target","isNaN","slice","handleBonusChange","distance","console","log","noValidate","autoComplete","TextField","required","TableContainer","Table","TableHead","TableRow","TableCell","sizeSmall","TableBody","roundedValue","rangeSelectorGroup","rangeSelectorButton","venueSelector","chartCard","paddingBottom","period","setPeriod","selectedVenue","setSelectedVenue","buildStats","countGames","top5","scoreAvg","scoreSeries","totalPctByDistance","accPctByDistanceSeries","totalPct","totalPctFirstPutts","totalPctLastPutts","ToggleButtonGroup","exclusive","evt","newPeriod","ToggleButton","getFullYear","InputLabel","Select","labelId","o","MenuItem","strokeDasharray","vertical","mirror","axisLine","tickLine","y","isAnimationActive","dot","getContrastText","paper","iconType","formatter","entry","index","lime","pink","lightBlue","deepOrange","undefined","some","p","reverse","selectGames","from","sort","e","startDate","date","acc","counts","ap","pctByDistanceSeries","pcts","position1","position2","position3","position4","position5","position6","countByDistanceSeries","jdx","gameCounts","0","1","2","3","4","5","bonusPuttsCounts","makeInitState","scoreCell","wrapper","appBar","drawerPaper","fab","zIndex","logo","App","drawerOpen","setDrawerOpen","setDarkMode","venueSelectorOpen","setVenueSelectorOpen","ReactGA","initialize","listen","pageview","closeDrawer","createMuiTheme","ThemeProvider","CssBaseline","AppBar","IconButton","edge","aria-label","path","Fab","createGame","SwipeableDrawer","anchor","disableBackdropTransition","onOpen","ListItemIcon","exact","Start","Games","Stats","Venues","hostname","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0879d574.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun-putt.4c66966b.jpg\";","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\nexport default ({ title, subtitle }: Props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Typography variant=\"h2\" classes={{ root: classes.root }}>\n        {title}\n      </Typography>\n      {subtitle && (\n        <Typography variant=\"subtitle1\" classes={{ root: classes.root }}>\n          {subtitle}\n        </Typography>\n      )}\n    </React.Fragment>\n  );\n};\n","import { API, Game, Settings, Result, Venue, Layout } from \"./types\";\n\nexport default class Storage implements API {\n  STORAGE_PREFIX = \"dough_\";\n  GAMES_KEY = \"games\";\n  SETTINGS_KEY = \"settings\";\n\n  activeGame(): null | Game {\n    return this.loadGames().filter((game) => !game.endTime)[0] || null;\n  }\n\n  createGame(venueId: string): Game {\n    const game = {\n      id: `game-${new Date().getTime()}`,\n      result: this.buildInitResult(),\n      venueId,\n      startTime: new Date(),\n      note: \"\",\n      labels: [],\n    };\n    this.addGame(game);\n    return game;\n  }\n\n  updateGame(game: Game): Game {\n    this.writeGames(this.loadGames().map((g) => (g.id === game.id ? game : g)));\n    return this.getGame(game.id);\n  }\n\n  getGame(id: string): Game {\n    const game = this.loadGames().find((g) => g.id === id);\n    if (game) {\n      return game;\n    }\n    throw new Error(\"Game not found\");\n  }\n\n  deleteGame(id: string): void {\n    this.writeGames(this.loadGames().filter((g) => g.id !== id));\n  }\n\n  listGames(): Game[] {\n    return this.loadGames();\n  }\n\n  getSettings(): Settings {\n    return this.get(this.SETTINGS_KEY, () => ({\n      darkMode: false,\n      showFeet: true,\n      showMetric: false,\n    }));\n  }\n\n  updateSettings(settings: Settings): Settings {\n    this.set(this.SETTINGS_KEY, settings);\n    return this.getSettings();\n  }\n\n  listVenues(): Venue[] {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  getVenue(id: string): Venue {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  resetGame(game: Game): Game {\n    game.result = this.buildInitResult();\n    return this.updateGame(game);\n  }\n\n  completeGame(game: Game): Game {\n    game.endTime = new Date();\n    return this.updateGame(game);\n  }\n\n  resetAll() {\n    localStorage.clear();\n  }\n\n  updateSpecialLayout(layoutId: string, layout: Layout): Layout {\n    const key = `layout_${layoutId}`;\n    this.set(key, layout);\n    return this.get(key, (k: string) => layout);\n  }\n\n  specialLayout(layoutId: string): Layout {\n    const key = `layout_${layoutId}`;\n    return this.get(key, (k: string) => [10, 15, 20, 23, 25, 27]);\n  }\n\n  getSpecialBonus(bonusId: string, defaultValue: number): number {\n    const key = `bonus_${bonusId}`;\n    return this.get(key, () => defaultValue);\n  }\n\n  setSpecialBonus(\n    bonusId: string,\n    bonus: number,\n    defaultValue: number\n  ): number {\n    const key = `bonus_${bonusId}`;\n    this.set(key, bonus);\n    return this.get(key, () => defaultValue);\n  }\n\n  private addGame(game: Game): void {\n    const games = this.loadGames();\n    games.unshift(game);\n    this.writeGames(games);\n  }\n\n  private loadGames(): Game[] {\n    return this.get(this.GAMES_KEY, () => []);\n  }\n\n  private writeGames(games: Game[]): void {\n    this.set(this.GAMES_KEY, games);\n  }\n\n  private set<T>(key: string, value: T): T {\n    localStorage.setItem(`${this.STORAGE_PREFIX}${key}`, JSON.stringify(value));\n    return this.get(key, () => value);\n  }\n\n  private get<T>(key: string, producer: (k: string) => T): T {\n    const data = localStorage.getItem(`${this.STORAGE_PREFIX}${key}`);\n    if (data) {\n      return JSON.parse(data);\n    }\n\n    return producer(key);\n  }\n\n  private buildInitResult(): Result {\n    return [\n      [\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n      ],\n      [\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n      ],\n      [\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n        [false, false],\n      ],\n    ];\n  }\n}\n","import React from \"react\";\nimport { Venue, Layout } from \"./types\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PageTitle from \"./PageTitle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Link } from \"react-router-dom\";\nimport Storage from \"./api\";\n\nconst storage = new Storage();\n\nexport const standardC1: Venue = {\n  id: \"standard-1\",\n  name: \"Cirkel 1\",\n  description: \"\",\n  layout: [10, 15, 20, 25, 30, 35],\n  address: \"Förtabästa korgvägen 1\",\n  location: { lon: 0, lat: 0 },\n  defaultBonus: 5,\n  longBonus: 10,\n  special: false,\n};\n\nexport const standardC2: Venue = {\n  id: \"standard-2\",\n  name: \"Cirkel 2\",\n  description: \"\",\n  layout: [35, 40, 45, 50, 55, 60],\n  address: \"Förtabästa korgvägen 1\",\n  location: { lon: 0, lat: 0 },\n  defaultBonus: 10,\n  longBonus: 20,\n  special: false,\n};\n\nexport const standardMix: Venue = {\n  id: \"standard-mix\",\n  name: \"Mix\",\n  description: \"\",\n  layout: [10, 20, 30, 40, 50, 60],\n  address: \"Förtabästa korgvägen 1\",\n  location: { lon: 0, lat: 0 },\n  defaultBonus: 10,\n  longBonus: 20,\n  special: false,\n};\n\nconst getSpecialLayout = (layoutId: string): Layout => {\n  return storage.specialLayout(layoutId);\n};\n\n// This solution is just nuts - but it works ¯\\_(ツ)_/¯\nexport const special: Venue = {\n  id: \"special-1\",\n  name: \"D.I.Y.\",\n  description: \"\",\n  get layout(): Layout {\n    return getSpecialLayout(this.id);\n  },\n  set layout(l: Layout) {\n    storage.updateSpecialLayout(this.id, l);\n  },\n  address: \"Förtabästa korgvägen 1\",\n  location: { lon: 0, lat: 0 },\n  get defaultBonus(): number {\n    return storage.getSpecialBonus(`default-${this.id}`, 10);\n  },\n  set defaultBonus(v: number) {\n    storage.setSpecialBonus(`default-${this.id}`, v, 10);\n  },\n  get longBonus(): number {\n    return storage.getSpecialBonus(`long-${this.id}`, 20);\n  },\n  set longBonus(v: number) {\n    storage.setSpecialBonus(`long-${this.id}`, v, 20);\n  },\n  special: true,\n};\n\nexport const bulltoftaStandard: Venue = {\n  id: \"bullen-1\",\n  name: \"Bulltofta Standard\",\n  description: \"\",\n  layout: [10, 15, 20, 25, 30, 35],\n  address: \"Cederströmsgatan 6, Malmö\",\n  location: { lon: 13.065716, lat: 55.597975 },\n  defaultBonus: 5,\n  longBonus: 10,\n  special: false,\n};\n\nexport const bulltoftaLong: Venue = {\n  id: \"bullen-2\",\n  name: \"Bulltofta Lång\",\n  description: \"\",\n  layout: [35, 40, 45, 50, 55, 60],\n  address: \"Cederströmsgatan 6, Malmö\",\n  location: { lon: 13.065716, lat: 55.597975 },\n  defaultBonus: 10,\n  longBonus: 20,\n  special: false,\n};\n\nexport const stHansStandard: Venue = {\n  id: \"sthans-1\",\n  name: \"St Hans Standard\",\n  description: \"\",\n  layout: [10, 15, 20, 25, 30, 35],\n  address: \"tbd\",\n  location: { lon: 13.196336, lat: 55.723897 },\n  defaultBonus: 5,\n  longBonus: 10,\n  special: false,\n};\n\nexport const venues = [standardC1, standardC2, standardMix, special];\n\nexport const findVenue = (venueId: string): Venue => {\n  const match = venues.find((venue) => venue.id === venueId);\n  if (!match) {\n    return venues[0];\n    // throw new Error(\"Couldn't find venue\");\n  }\n  return match;\n};\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <React.Fragment>\n      <PageTitle title=\"Banor\" />\n      <List>\n        {venues.map((venue) => (\n          <React.Fragment key={venue.id}>\n            <Divider variant=\"middle\" />\n            <ListItem button component={Link} to={`/venues/${venue.id}`}>\n              <ListItemText\n                primary={venue.name}\n                secondary={`Distanser: ${venue.layout.join(\", \")} Bonus: ${\n                  venue.defaultBonus\n                } / ${venue.longBonus}`}\n              />\n            </ListItem>\n          </React.Fragment>\n        ))}\n      </List>\n    </React.Fragment>\n  );\n};\n","import { Game, Venue } from \"./types\";\nimport { findVenue } from \"./Venues\";\n\nexport default class Engine {\n  game: Game;\n  venue: Venue;\n\n  constructor(game: Game) {\n    this.game = game;\n    this.venue = findVenue(game.venueId);\n  }\n\n  fullRow(positionIdx: number): boolean {\n    return this.game.result\n      .flatMap((round) => round[positionIdx])\n      .every(Boolean);\n  }\n\n  bonusPosition(roundIdx: number, attemptIdx: number): boolean {\n    return (\n      this.firstBonusPosition(roundIdx, attemptIdx) ||\n      this.lastBonusPosition(roundIdx, attemptIdx)\n    );\n  }\n\n  firstBonusPosition(roundIdx: number, attemptIdx: number): boolean {\n    return roundIdx === 0 && attemptIdx === 0;\n  }\n\n  lastBonusPosition(roundIdx: number, attemptIdx: number): boolean {\n    return roundIdx === 2 && attemptIdx === 1;\n  }\n\n  scoreAttempt(roundIdx: number, positionIdx: number, attemptIdx: number) {\n    return this.game.result[roundIdx][positionIdx][attemptIdx]\n      ? this.venue.layout[positionIdx] +\n          (this.bonusPosition(roundIdx, attemptIdx)\n            ? this.bonusLevel(positionIdx)\n            : 0)\n      : 0;\n  }\n\n  scoreGame() {\n    let baseScore = this.game.result.reduce((sum, round, i) => {\n      return (\n        sum +\n        round.reduce((roundSum, position, j) => {\n          return (\n            roundSum + this.scoreAttempt(i, j, 0) + this.scoreAttempt(i, j, 1)\n          );\n        }, 0)\n      );\n    }, 0);\n    return (\n      baseScore +\n      this.venue.layout.reduce((sum, positionValue, positionIdx) => {\n        return sum + (this.fullRow(positionIdx) ? positionValue : 0);\n      }, 0)\n    );\n  }\n\n  succcessCount(): number {\n    return this.countBy(\n      (roundIdx, positionIdx, attemptIdx, attempt) => attempt\n    );\n  }\n\n  successPercent(): string {\n    return ((this.succcessCount() / (6 * 6)) * 100).toFixed(1);\n  }\n\n  bonusPositionCount() {\n    const firstPositionCount = this.countBy(\n      (roundIdx, positionIdx, attemptIdx, attempt) =>\n        this.firstBonusPosition(roundIdx, attemptIdx) && attempt\n    );\n    const lastPositionCount = this.countBy(\n      (roundIdx, positionIdx, attemptIdx, attempt) =>\n        this.lastBonusPosition(roundIdx, attemptIdx) && attempt\n    );\n\n    return { firstPositionCount, lastPositionCount };\n  }\n\n  bonusPositionPercent(): { first: string; last: string; both: string } {\n    const { firstPositionCount, lastPositionCount } = this.bonusPositionCount();\n\n    return {\n      first: ((firstPositionCount / 6) * 100).toFixed(1),\n      last: ((lastPositionCount / 6) * 100).toFixed(1),\n      both: (((firstPositionCount + lastPositionCount) / 12) * 100).toFixed(1),\n    };\n  }\n\n  positionCount(): number[] {\n    return [...Array<string>(6)].map((_, idx) =>\n      this.countBy(\n        (roundIdx, positionIdx, attemptIdx, attempt) =>\n          positionIdx === idx && attempt\n      )\n    );\n  }\n\n  positionPercent(): string[] {\n    return this.positionCount().map((count) => ((count / 6) * 100).toFixed(1));\n  }\n\n  roundPercent(): number[] {\n    return this.game.result.map((round, idx) =>\n      Math.round(\n        (this.countBy(\n          (roundIdx, positionIdx, attemptIdx, attempt) =>\n            roundIdx === idx && attempt\n        ) /\n          (6 * 2)) *\n          100\n      )\n    );\n  }\n\n  fullRound(): boolean[] {\n    return this.roundPercent().map((pct) => pct >= 100);\n  }\n\n  countBy(\n    pred: (\n      roundIdx: number,\n      positionId: number,\n      attemptId: number,\n      attempt: boolean\n    ) => boolean\n  ): number {\n    return this.game.result.reduce((sum, round, roundIdx) => {\n      return (\n        sum +\n        round.reduce((roundSum, position, positionIdx) => {\n          return (\n            roundSum +\n            position.reduce((attemptSum, attempt, attemptIdx) => {\n              return (\n                attemptSum +\n                (pred(roundIdx, positionIdx, attemptIdx, attempt) ? 1 : 0)\n              );\n            }, 0)\n          );\n        }, 0)\n      );\n    }, 0);\n  }\n\n  private bonusLevel(positionIdx: number) {\n    return positionIdx <= 3 ? this.venue.defaultBonus : this.venue.longBonus;\n  }\n}\n\n// const score = (grid) => {\n//     const baseScore = grid.reduce((sum, row, i) => {\n//       const successCount = row.filter((col) => col).length;\n//       const base = successCount * POSITIONS[i];\n//       const bonus = POSITIONS[i] <= 25 ? 5 : 10;\n//       const firstBonus = row[0] ? bonus : 0;\n//       const lastBonus = row[row.length - 1] ? bonus : 0;\n//       const allBonus = successCount === row.length ? POSITIONS[i] : 0;\n//       return sum + base + firstBonus + lastBonus + allBonus;\n//     }, 0);\n//     return baseScore;\n//   }\n","import React, { useState } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport PageTitle from \"./PageTitle\";\nimport Engine from \"./engine\";\nimport Storage from \"./api\";\nimport { useHistory } from \"react-router-dom\";\n\ntype Props = {};\n\nconst storage = new Storage();\n\nexport default (props: Props) => {\n  const history = useHistory();\n  const [games] = useState(storage.listGames());\n\n  return (\n    <React.Fragment>\n      <PageTitle title=\"Resultat\" />\n      <List>\n        {games.map((game) => {\n          const engine = new Engine(game);\n          return (\n            <React.Fragment key={game.id}>\n              <Divider variant=\"middle\" />\n              <ListItem\n                button\n                onClick={() => history.push(`/games/${game.id}`)}\n                key={game.id}\n              >\n                <ListItemText\n                  primary={engine.scoreGame()}\n                  secondary={`${engine.venue.name} - ${new Date(\n                    game.startTime\n                  ).toLocaleString()}`}\n                />\n              </ListItem>\n            </React.Fragment>\n          );\n        })}\n      </List>\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport PageTitle from \"./PageTitle\";\nimport Storage from \"./api\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport putter from \"./sun-putt.jpg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as MuILink } from \"@material-ui/core\";\n\ntype Props = {};\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst storage = new Storage();\n\nexport default (props: Props) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {\n    const activeGame = storage.activeGame();\n    if (activeGame) {\n      history.push(`/play/${activeGame.id}`);\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <PageTitle title=\"1025\" />\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt=\"Contemplative Reptile\"\n            height=\"200\"\n            image={putter}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Välkommen!\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Denna 1025 app är utvecklad av Spinndisc FK. För mer info om\n              regler se klubbens hemsida.\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() =>\n              window.location.assign(\n                \"https://www.spinndiscfk.se/index.php/klubben/putt-traning\"\n              )\n            }\n          >\n            Lär dig mer\n          </Button>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { venues } from \"./Venues\";\n\nexport interface VenueSelectorProps {\n  open: boolean;\n  onClose: (venueId: string | null) => void;\n}\n\nexport default function VenueSelector(props: VenueSelectorProps) {\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose(null);\n  };\n\n  const handleListItemClick = (value: string) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Välj bana</DialogTitle>\n      <List>\n        {venues.map((venue) => (\n          <ListItem\n            button\n            onClick={() => handleListItemClick(venue.id)}\n            key={venue.id}\n          >\n            <ListItemText primary={venue.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { ButtonBase } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\nimport green from \"@material-ui/core/colors/green\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { Swipeable, EventData } from \"react-swipeable\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport SwapHorizontalCircleIcon from \"@material-ui/icons/SwapHorizontalCircle\";\n\ntype Props = {\n  round: number;\n  position: number;\n  success: boolean;\n  score: number;\n  rowBonus: boolean;\n  bonusPosition: boolean;\n  onClick: () => void;\n  onSwipe: () => void;\n  staticBackground?: boolean;\n};\n\nconst roundShades = [grey[100], grey[200], grey[300]];\nconst darkEoundShades = [grey[400], grey[600], grey[800]];\n\nconst backgroundColor = (props: Props): string => {\n  const { round, success, rowBonus, bonusPosition, staticBackground } = props;\n  if (rowBonus) {\n    return yellow[500];\n  } else if (bonusPosition && success) {\n    return lightGreen[\"A400\"];\n  } else if (success) {\n    return lightGreen[\"A200\"];\n  } else {\n    return staticBackground ? grey[100] : roundShades[round];\n  }\n};\n\nconst darkBackgroundColor = (props: Props): string => {\n  const { round, success, rowBonus, bonusPosition, staticBackground } = props;\n  if (rowBonus) {\n    return blue[800];\n  } else if (bonusPosition && success) {\n    return green[\"800\"];\n  } else if (success) {\n    return green[\"600\"];\n  } else {\n    return staticBackground ? grey[100] : darkEoundShades[round];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  swipeContainer: {\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: 0,\n  },\n  root: (props: Props) => ({\n    ...theme.typography.button,\n    width: \"100%\",\n    height: \"100%\",\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: theme.palette.background.default,\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? darkBackgroundColor(props)\n        : backgroundColor(props),\n  }),\n}));\n\nexport default (props: Props) => {\n  const { success, score, onClick, onSwipe } = props;\n  const classes = useStyles(props);\n  const [swiping, setSwiping] = useState<{ done: boolean } | null>(null);\n  return (\n    <Swipeable\n      onSwiped={(event: EventData) => {\n        if (swiping && swiping.done) {\n          onSwipe();\n        }\n        setSwiping(null);\n      }}\n      onSwiping={(event: EventData) => {\n        if (event.first) {\n          setSwiping({ done: false });\n        }\n        if (Math.abs(event.deltaX) > 100) {\n          setSwiping({ done: true });\n        } else {\n          setSwiping({ done: false });\n        }\n      }}\n      preventDefaultTouchmoveEvent={true}\n      className={classes.swipeContainer}\n    >\n      <ButtonBase classes={{ root: classes.root }} onClick={onClick}>\n        {success ? (\n          score\n        ) : swiping ? (\n          swiping.done ? (\n            <CheckCircleIcon style={{ color: green[\"A700\"] }} />\n          ) : (\n            <SwapHorizontalCircleIcon />\n          )\n        ) : (\n          \"\"\n        )}\n      </ButtonBase>\n    </Swipeable>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\n\ntype Props = {\n  roundNumber: number;\n  checked?: boolean;\n  hidden?: boolean;\n  onClick?: () => void;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: (hidden: boolean) => ({\n    textAlign: \"center\",\n    paddingTop: theme.spacing(),\n    visibility: hidden ? \"hidden\" : \"initial\",\n    color: theme.palette.text.hint,\n  }),\n}));\n\nexport default ({\n  roundNumber,\n  hidden = false,\n  checked = false,\n  onClick = () => {},\n}: Props) => {\n  const classes = useStyles(hidden);\n\n  return (\n    <Typography variant=\"h6\" classes={{ root: classes.root }} gutterBottom>\n      <Chip\n        label={roundNumber}\n        clickable\n        icon={\n          checked ? <CheckCircleOutlineIcon /> : <RadioButtonUncheckedIcon />\n        }\n        onClick={onClick}\n      />\n    </Typography>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n});\n\ntype Props = {\n  score: number;\n};\n\nexport default ({ score }: Props) => {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"h1\" classes={{ root: classes.root }}>\n      {score}\n    </Typography>\n  );\n};\n","import Storage from \"./api\";\n\nconst storage = new Storage();\n\nexport const positionLabel = (positionValue: number) => {\n  const result = [];\n  if (storage.getSettings().showFeet) {\n    result.push(`${positionValue}'`);\n  }\n  if (storage.getSettings().showMetric) {\n    result.push(`${(positionValue / 3.281).toFixed(1)}m`);\n  }\n  return result.join(\"/\");\n};\n\nexport const feetToMeterLabel = (value: number): string =>\n  `${(value / 3.281).toFixed(1)}`;\n","import React, { useState } from \"react\";\nimport { RoundResult } from \"./types\";\nimport \"./App.css\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Toolbar, Button } from \"@material-ui/core\";\nimport Engine from \"./engine\";\nimport Attempt from \"./Attempt\";\nimport RoundHeader from \"./RoundHeader\";\nimport Score from \"./Score\";\nimport { useConfirm } from \"material-ui-confirm\";\nimport Storage from \"./api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { positionLabel } from \"./helpers\";\n\nconst storage = new Storage();\n\nconst useStyles = makeStyles((theme) => ({\n  position: {\n    textAlign: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    color: theme.palette.text.hint,\n  },\n}));\n\nexport default function Play() {\n  const history = useHistory();\n  const { id } = useParams();\n  const [game, setGame] = useState(storage.getGame(id));\n  const confirm = useConfirm();\n  const engine = new Engine(game);\n  const classes = useStyles();\n  const fullRounds = engine.fullRound();\n  const toggleAttempt = (i: number, j: number, k: number) => {\n    game.result[i][j][k] = !game.result[i][j][k];\n    setGame(storage.updateGame(game));\n  };\n\n  const toggleSelectPrevious = (\n    roundIdx: number,\n    positionIdx: number,\n    attemptIdx: number\n  ) => {\n    let lastSuccess = [0, 0];\n    for (let i = 0; i <= positionIdx; i++) {\n      for (let j = 0; j <= 1; j++) {\n        if (game.result[roundIdx][i][j]) {\n          lastSuccess = [i, j];\n        }\n      }\n    }\n    // Wrap around if last success is in right column\n    if (lastSuccess[1] === 1) {\n      lastSuccess[0]++;\n      lastSuccess[1] = 0;\n    }\n    for (let i = lastSuccess[0]; i <= positionIdx; i++) {\n      for (\n        let j = lastSuccess[1];\n        j <= (i < positionIdx ? 1 : attemptIdx);\n        j++\n      ) {\n        game.result[roundIdx][i][j] = true;\n      }\n    }\n    setGame(storage.updateGame(game));\n  };\n\n  const reset = () => {\n    confirm({ title: \"Är du säker?\" })\n      .then(() => {\n        setGame(storage.resetGame(game));\n      })\n      .catch(() => {});\n  };\n\n  const deleteGame = () => {\n    confirm({ title: \"Är du säker?\" })\n      .then(() => {\n        storage.deleteGame(game.id);\n        history.push(\"/\");\n      })\n      .catch(() => {});\n  };\n\n  const finish = () => {\n    confirm({\n      title: \"Bra jobbat!\",\n      description: \"Säker på att du ska avsluta?\",\n    })\n      .then(() => {\n        storage.completeGame(game);\n        history.push(`/games/${game.id}`);\n      })\n      .catch(() => {});\n  };\n\n  const setFullRound = (roundIx: number) => () => {\n    if (!fullRounds[roundIx]) {\n      game.result[roundIx] = game.result[roundIx].map((position) => [\n        true,\n        true,\n      ]) as RoundResult;\n      setGame(storage.updateGame(game));\n    }\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flexGrow={1}>\n      <Box\n        display=\"flex\"\n        flexGrow={3}\n        flexDirection=\"row\"\n        flexShrink={0}\n        flexBasis={0}\n      >\n        <Box display=\"flex\" flexDirection=\"column\">\n          <RoundHeader roundNumber={0} hidden />\n          {/* <Box flexGrow={1} flexShrink={0} flexBasis={0}>\n            Runda <br />\n            Fot\n          </Box> */}\n          {engine.venue.layout.map((position, positionIdx) => (\n            <Box\n              flexGrow={1}\n              flexShrink={0}\n              flexBasis={0}\n              display=\"flex\"\n              justifyContent=\"center\"\n              key={`position-${positionIdx}`}\n            >\n              <Box alignSelf=\"center\" className={classes.position}>\n                {positionLabel(position)}\n              </Box>\n            </Box>\n          ))}\n        </Box>\n        {game.result.map((round, i) => (\n          <Box\n            flexGrow={1}\n            flexShrink={0}\n            flexBasis={0}\n            display=\"flex\"\n            flexDirection=\"column\"\n            key={`round-col-${i}`}\n          >\n            <RoundHeader\n              roundNumber={i + 1}\n              checked={fullRounds[i]}\n              onClick={setFullRound(i)}\n            />\n            {round.map((position, j) => (\n              <Box\n                flexGrow={1}\n                flexShrink={0}\n                flexBasis={0}\n                display=\"flex\"\n                key={`attepmt-row-${j}`}\n              >\n                {position.map((attempt, k) => (\n                  <Attempt\n                    round={i}\n                    bonusPosition={engine.bonusPosition(i, k)}\n                    position={j}\n                    rowBonus={engine.fullRow(j)}\n                    score={engine.scoreAttempt(i, j, k)}\n                    success={attempt}\n                    key={`attempt-${i}-${j}-${k}`}\n                    onClick={() => toggleAttempt(i, j, k)}\n                    onSwipe={() => toggleSelectPrevious(i, j, k)}\n                  />\n                ))}\n              </Box>\n            ))}\n          </Box>\n        ))}\n      </Box>\n      <Box>\n        <Toolbar>\n          <Button onClick={deleteGame}>Släng</Button>\n          <Button onClick={reset}>Rensa</Button>\n          <Box flexGrow={1}></Box>\n          <Button onClick={finish} color=\"primary\" variant=\"contained\">\n            Klar!\n          </Button>\n        </Toolbar>\n      </Box>\n      <Box flexGrow={1}>\n        <Score score={engine.scoreGame()} />\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Typography, makeStyles } from \"@material-ui/core\";\n\ninterface CardHeaderProps {\n  title: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function CardHeader({ title }: CardHeaderProps) {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"button\" className={classes.root}>\n      {title}\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport PageTitle from \"./PageTitle\";\nimport Storage from \"./api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Settings as TSettings } from \"./types\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CardHeader from \"./CardHeader\";\nimport { useConfirm } from \"material-ui-confirm\";\nimport { useHistory } from \"react-router-dom\";\n\nconst storage = new Storage();\n\ninterface SettingsProps {\n  toggleDarkMode: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function Settings(props: SettingsProps) {\n  const [settings, setSettings] = React.useState(storage.getSettings());\n  const history = useHistory();\n  const classes = useStyles();\n  const confirm = useConfirm();\n\n  const update = (settings: TSettings) => {\n    setSettings(storage.updateSettings(settings));\n  };\n\n  return (\n    <React.Fragment>\n      <PageTitle title=\"Ställ in\" />\n      <Card className={classes.card}>\n        <CardContent>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Utseende</FormLabel>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.darkMode}\n                    onChange={() => {\n                      settings.darkMode = !settings.darkMode;\n                      props.toggleDarkMode(settings.darkMode);\n                      update(settings);\n                    }}\n                  />\n                }\n                label=\"Dark mode\"\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.showFeet}\n                    onChange={() => {\n                      settings.showFeet = !settings.showFeet;\n                      if (!settings.showFeet && !settings.showMetric) {\n                        settings.showMetric = true;\n                      }\n                      update(settings);\n                    }}\n                  />\n                }\n                label=\"Visa fot\"\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.showMetric}\n                    onChange={() => {\n                      settings.showMetric = !settings.showMetric;\n                      if (!settings.showFeet && !settings.showMetric) {\n                        settings.showFeet = true;\n                      }\n                      update(settings);\n                    }}\n                  />\n                }\n                label=\"Visa meter\"\n              />\n            </FormGroup>\n          </FormControl>\n        </CardContent>\n      </Card>\n      <CardHeader title=\"Danger Zone\" />\n      <Card className={classes.card}>\n        <CardContent>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteIcon />}\n            onClick={() =>\n              confirm({\n                title: \"Är du RIKTIGT säker?\",\n                description: \"All speldata kommer raderas!\",\n              })\n                .then(() => {\n                  storage.resetAll();\n                  history.push(\"/\");\n                })\n                .catch(() => {})\n            }\n          >\n            Nollställ all data\n          </Button>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React, { useState } from \"react\";\nimport Storage from \"./api\";\nimport clsx from \"clsx\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport PageTitle from \"./PageTitle\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport Engine from \"./engine\";\nimport Card from \"@material-ui/core/Card\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport { positionLabel } from \"./helpers\";\nimport {\n  RadialBarChart,\n  RadialBar,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Radar,\n  PieChart,\n  Pie,\n  Label,\n} from \"recharts\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Color, Button } from \"@material-ui/core\";\nimport GolfCourseIcon from \"@material-ui/icons/GolfCourse\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport CardHeader from \"./CardHeader\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useConfirm } from \"material-ui-confirm\";\n\ninterface GameDetailsProps {}\n\nconst gridCellSize = 30;\nconst useStyles = makeStyles((theme) => ({\n  scoreCard: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  gridRow: {\n    height: gridCellSize,\n  },\n  gridIcon: {\n    fontSize: gridCellSize,\n  },\n  gridIconSuccess: {\n    color: theme.palette.success.main,\n  },\n  gridIconFail: {\n    color: theme.palette.error.main,\n  },\n  gridLabel: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    flexGrow: 2,\n  },\n  cardHeader: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  venueChip: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst storage = new Storage();\n\nexport default function GameDetails(props: GameDetailsProps) {\n  const { id } = useParams();\n  const theme = useTheme();\n  const [game] = useState(storage.getGame(id));\n  const confirm = useConfirm();\n  const history = useHistory();\n  const engine = new Engine(game);\n  const classes = useStyles();\n\n  const matrix: boolean[][] = [];\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 6; j++) {\n      if (!matrix[j]) {\n        matrix[j] = [];\n      }\n      matrix[j] = [...matrix[j], ...game.result[i][j]];\n    }\n  }\n  const positionPercentages: {\n    name: string;\n    value: number;\n    fill: string;\n  }[] = engine.positionPercent().map((stat, idx: number) => ({\n    name: `${positionLabel(engine.venue.layout[idx])} → ${stat}%`,\n    value: Number(stat),\n    fill: theme.palette.grey[(idx * 100 + 400) as keyof Color] as string,\n  }));\n  const bonusPercent = engine.bonusPositionPercent();\n  const radarData = engine.venue.layout.map((position, idx) => ({\n    position: positionLabel(position),\n    a: game.result[0][idx].filter((attempt) => attempt).length,\n    b: game.result[1][idx].filter((attempt) => attempt).length,\n    c: game.result[2][idx].filter((attempt) => attempt).length,\n    fullMark: 2,\n  }));\n  const roundPercents = engine.roundPercent();\n\n  return (\n    <Box flexGrow={1}>\n      <ScrollToTop />\n      <PageTitle\n        title={`${engine.scoreGame()}`}\n        subtitle={new Date(game.startTime).toLocaleString()}\n      />\n      <Chip\n        component={Link}\n        to={`/venues/${engine.venue.id}`}\n        variant=\"outlined\"\n        label={engine.venue.name}\n        icon={<GolfCourseIcon />}\n        color=\"primary\"\n        clickable={true}\n        className={classes.venueChip}\n      />\n      <Card classes={{ root: classes.scoreCard }}>\n        <CardContent>\n          {matrix.map((row, i) => (\n            <Box\n              key={`row-${i}`}\n              className={classes.gridRow}\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Box alignSelf=\"center\" className={classes.gridLabel}>\n                {positionLabel(engine.venue.layout[i])}\n              </Box>\n              {row.map((col, j) => {\n                return col ? (\n                  <CheckCircleOutlineIcon\n                    key={`attempt-${row}-${j}`}\n                    className={clsx(classes.gridIcon, classes.gridIconSuccess)}\n                  />\n                ) : (\n                  <RadioButtonUncheckedIcon\n                    key={`attempt-${row}-${j}`}\n                    className={clsx(classes.gridIcon, classes.gridIconFail)}\n                  />\n                );\n              })}\n            </Box>\n          ))}\n        </CardContent>\n      </Card>\n      <Card classes={{ root: classes.scoreCard }}>\n        <Box display=\"flex\">\n          <PercentPanel\n            value={Number(engine.successPercent())}\n            title=\"Totalt\"\n          />\n          <PercentPanel value={Number(bonusPercent.first)} title=\"Första\" />\n          <PercentPanel value={Number(bonusPercent.last)} title=\"Sista\" />\n        </Box>\n      </Card>\n      <CardHeader title=\"Träffar per distans\" />\n      <Card classes={{ root: classes.scoreCard }}>\n        <ResponsiveContainer width=\"100%\" height={180}>\n          <RadialBarChart\n            innerRadius=\"20%\"\n            outerRadius=\"80%\"\n            data={positionPercentages}\n            startAngle={90}\n            endAngle={-270}\n            cx=\"25%\"\n            margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n          >\n            <PolarAngleAxis\n              type=\"number\"\n              // @ts-ignore\n              domain={[0, 100]}\n              angleAxisId={0}\n              tick={false}\n            />\n            <RadialBar\n              label={false}\n              background\n              dataKey=\"value\"\n              legendType=\"square\"\n            />\n            <Legend\n              iconSize={10}\n              layout=\"vertical\"\n              verticalAlign=\"middle\"\n              align=\"right\"\n            />\n          </RadialBarChart>\n        </ResponsiveContainer>\n      </Card>\n      <CardHeader title=\"Träffar per omgång\" />\n      <Card classes={{ root: classes.scoreCard }}>\n        <Box display=\"flex\">\n          {roundPercents.map((value, idx) => (\n            <PercentPanel\n              value={value}\n              title={String(idx + 1)}\n              key={`hits-per-round-${idx}`}\n            />\n          ))}\n        </Box>\n        <Divider variant=\"middle\" className={classes.divider} />\n        <ResponsiveContainer width=\"100%\" height={200}>\n          <RadarChart data={radarData}>\n            <PolarGrid />\n            <PolarAngleAxis\n              dataKey=\"position\"\n              tick={{ fill: theme.palette.text.primary }}\n            />\n            <PolarRadiusAxis angle={30} domain={[0, 2]} />\n            <Radar\n              name=\"1\"\n              dataKey=\"a\"\n              stroke={red[400]}\n              fill={red[400]}\n              fillOpacity={0.2}\n            />\n            <Radar\n              name=\"2\"\n              dataKey=\"b\"\n              stroke={green[400]}\n              fill={green[400]}\n              fillOpacity={0.2}\n            />\n            <Radar\n              name=\"3\"\n              dataKey=\"c\"\n              stroke={blue[400]}\n              fill={blue[400]}\n              fillOpacity={0.2}\n            />\n            <Tooltip />\n            <Legend wrapperStyle={{ paddingTop: theme.spacing(2) }} />\n          </RadarChart>\n        </ResponsiveContainer>\n      </Card>\n      <CardHeader title=\"Farozonen\" />\n      <Card classes={{ root: classes.scoreCard }}>\n        <CardContent>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteIcon />}\n            onClick={() =>\n              confirm({\n                title: \"Är du säker?\",\n                description: \"Spelet kommer slängas för all evighet!\",\n              })\n                .then(() => {\n                  storage.deleteGame(game.id);\n                  history.push(\"/\");\n                })\n                .catch(() => {})\n            }\n          >\n            Släng\n          </Button>\n        </CardContent>\n      </Card>\n\n      <Box style={{ height: 100 }}></Box>\n    </Box>\n  );\n}\n\nconst PercentPanel = ({ title, value }: { title: string; value: number }) => {\n  const theme = useTheme();\n  return (\n    <Box\n      flexGrow={1}\n      flexShrink={0}\n      flexBasis={0}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      <Typography variant=\"button\">{title}</Typography>\n      <ResponsiveContainer width=\"100%\" height={100}>\n        <PieChart>\n          <Pie\n            data={[\n              { name: \"score\", value: value, fill: theme.palette.grey[500] },\n              {\n                name: \"max\",\n                value: 100 - value,\n                fill: theme.palette.grey[200],\n              },\n            ]}\n            cx=\"50%\"\n            cy=\"50%\"\n            dataKey=\"value\"\n            startAngle={90}\n            endAngle={-270}\n            innerRadius=\"60%\"\n            outerRadius=\"80%\"\n            stroke=\"none\"\n          >\n            <Label\n              value={`${value}%`}\n              position=\"center\"\n              fill={theme.palette.text.primary}\n            />\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n// Score\n// Bana\n// Layout\n// % hits\n\n// Avstånd: ()\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PageTitle from \"./PageTitle\";\nimport Card from \"@material-ui/core/Card\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport StarHalfIcon from \"@material-ui/icons/StarHalf\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport { feetToMeterLabel } from \"./helpers\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport { findVenue } from \"./Venues\";\nimport CardHeader from \"./CardHeader\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Layout } from \"./types\";\n\ninterface VenueDetailsProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  positionTableCell: {\n    padding: 0,\n  },\n  saveButton: {\n    marginTop: theme.spacing(1),\n  },\n  input: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\n\nexport default function VenueDetails(props: VenueDetailsProps) {\n  const { id } = useParams();\n  const [venue] = useState(findVenue(id));\n  const [layout, setLayout] = useState(venue.layout);\n  const [bonuses, setBonuses] = useState({\n    short: venue.defaultBonus,\n    long: venue.longBonus,\n  });\n  const classes = useStyles();\n\n  const handlePositionChange = (idx: number) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const newValue = Number(event.target.value);\n    if (isNaN(newValue)) {\n      return;\n    }\n    setLayout([\n      ...layout.slice(0, idx),\n      newValue,\n      ...layout.slice(idx + 1),\n    ] as Layout);\n  };\n\n  const handleSaveLayout = () => {\n    venue.layout = layout;\n    venue.defaultBonus = bonuses.short;\n    venue.longBonus = bonuses.long;\n  };\n\n  const handleBonusChange = (distance: string) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(event.target.value);\n    const newValue = Number(event.target.value);\n    if (isNaN(newValue)) {\n      return;\n    }\n    setBonuses({\n      ...bonuses,\n      [distance]: newValue,\n    });\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <ScrollToTop />\n      <PageTitle title={venue.name} />\n      {!venue.special ? (\n        <React.Fragment>\n          <CardHeader title=\"Layout\" />\n          <Card classes={{ root: classes.card }}>\n            <CardContent>\n              <TableContainer>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        Positioner\n                      </TableCell>\n                      <TableCell\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        1\n                      </TableCell>\n                      <TableCell\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        2\n                      </TableCell>\n                      <TableCell\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        3\n                      </TableCell>\n                      <TableCell\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        4\n                      </TableCell>\n                      <TableCell\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        5\n                      </TableCell>\n                      <TableCell\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        6\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell\n                        variant=\"head\"\n                        align=\"left\"\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        Fot\n                      </TableCell>\n                      {layout.map((position, idx) => (\n                        <TableCell\n                          classes={{ sizeSmall: classes.positionTableCell }}\n                          key={`feet-position-${idx}`}\n                        >\n                          {position}\n                          {/* {positionLabel(position)} */}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        variant=\"head\"\n                        align=\"left\"\n                        classes={{ sizeSmall: classes.positionTableCell }}\n                      >\n                        Meter\n                      </TableCell>\n                      {layout.map((position, idx) => (\n                        <TableCell\n                          classes={{ sizeSmall: classes.positionTableCell }}\n                          key={`meter-position-${idx}`}\n                        >\n                          {feetToMeterLabel(position)}\n                          {/* {positionLabel(position)} */}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </CardContent>\n          </Card>\n          <CardHeader title=\"Info\" />\n          <Card classes={{ root: classes.card }}>\n            <CardContent>\n              <Box\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Typography variant=\"body2\">Bonus:</Typography>\n                <Chip\n                  icon={<StarHalfIcon />}\n                  label={`Kort: ${venue.defaultBonus}`}\n                />\n                <Chip icon={<StarIcon />} label={`Lång: ${venue.longBonus}`} />\n              </Box>\n            </CardContent>\n          </Card>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <CardHeader title=\"Konfiguration\" />\n          <Card classes={{ root: classes.card }}>\n            <CardContent>\n              <form noValidate autoComplete=\"off\" className={classes.input}>\n                <div>\n                  <TextField\n                    required\n                    value={bonuses.short}\n                    id={`default-bonus`}\n                    label={`Kort bonus`}\n                    onChange={handleBonusChange(\"short\")}\n                  />\n                  <TextField\n                    required\n                    value={bonuses.long}\n                    id={`long-bonus`}\n                    label={`Lång bonus`}\n                    onChange={handleBonusChange(\"long\")}\n                  />\n\n                  {layout.map((position, idx) => (\n                    <TextField\n                      required\n                      value={position}\n                      id={`position-${idx}`}\n                      key={`position-${idx}`}\n                      label={`Position ${idx + 1}`}\n                      onChange={handlePositionChange(idx)}\n                    />\n                  ))}\n                </div>\n                <Button\n                  variant=\"contained\"\n                  onClick={handleSaveLayout}\n                  className={classes.saveButton}\n                >\n                  Spara\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { useTheme, Box, Typography } from \"@material-ui/core\";\nimport { ResponsiveContainer, PieChart, Pie, Label } from \"recharts\";\n\nexport default ({ title, value }: { title: string; value: number }) => {\n  const theme = useTheme();\n  const roundedValue = Math.round(value);\n  return (\n    <Box\n      flexGrow={1}\n      flexShrink={0}\n      flexBasis={0}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      <Typography variant=\"button\">{title}</Typography>\n      <ResponsiveContainer width=\"100%\" height={100}>\n        <PieChart>\n          <Pie\n            data={[\n              {\n                name: \"score\",\n                value: roundedValue,\n                fill: theme.palette.grey[500],\n              },\n              {\n                name: \"max\",\n                value: 100 - roundedValue,\n                fill: theme.palette.grey[200],\n              },\n            ]}\n            cx=\"50%\"\n            cy=\"50%\"\n            dataKey=\"value\"\n            startAngle={90}\n            endAngle={-270}\n            innerRadius=\"60%\"\n            outerRadius=\"80%\"\n            stroke=\"none\"\n          >\n            <Label\n              value={`${roundedValue}%`}\n              position=\"center\"\n              fill={theme.palette.text.primary}\n            />\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n};\n","import React, { useState } from \"react\";\nimport PageTitle from \"./PageTitle\";\nimport Engine from \"./engine\";\nimport Storage from \"./api\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  useTheme,\n  Box,\n  Typography,\n  Chip,\n  Color,\n} from \"@material-ui/core\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { venues, findVenue } from \"./Venues\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  CartesianGrid,\n  YAxis,\n  Legend,\n  Line,\n  ReferenceLine,\n  RadialBarChart,\n  PolarAngleAxis,\n  RadialBar,\n} from \"recharts\";\nimport PercentPanel from \"./PercentPanel\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport CardHeader from \"./CardHeader\";\nimport pink from \"@material-ui/core/colors/pink\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\nimport lime from \"@material-ui/core/colors/green\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport clsx from \"clsx\";\nimport { positionLabel } from \"./helpers\";\n\ntype Props = {};\n\nconst storage = new Storage();\n\nconst useStyles = makeStyles((theme) => ({\n  rangeSelectorGroup: {\n    width: \"100%\",\n  },\n  rangeSelectorButton: {\n    flexGrow: 1,\n  },\n  card: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  venueSelector: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  chartCard: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\ntype Periods = \"all\" | \"year\" | \"20\" | \"5\";\n\nexport default (props: Props) => {\n  const theme = useTheme();\n  const initPeriod: Periods = \"all\";\n  const [period, setPeriod] = useState<Periods>(initPeriod);\n  const [selectedVenue, setSelectedVenue] = useState(venues[0].id);\n  const classes = useStyles();\n\n  const handlePeriodChange = (evt: any, newPeriod: Periods | null) => {\n    if (newPeriod !== null) {\n      setPeriod(newPeriod);\n    }\n  };\n\n  const venue = findVenue(selectedVenue);\n\n  const handleVenueChange = (\n    event: React.ChangeEvent<{ value: unknown }>,\n    o: any\n  ) => {\n    setSelectedVenue(event.target.value as string);\n  };\n\n  const {\n    countGames,\n    top5,\n    scoreAvg,\n    scoreSeries,\n    totalPctByDistance,\n    accPctByDistanceSeries,\n    totalPct,\n    totalPctFirstPutts,\n    totalPctLastPutts,\n  } = buildStats(period, selectedVenue);\n\n  const positionPercentages: {\n    name: string;\n    value: number;\n    fill: string;\n  }[] = totalPctByDistance.map((stat, idx: number) => ({\n    name: `${positionLabel(venue.layout[idx])} → ${stat.toFixed(0)}%`,\n    value: Number(stat),\n    fill: theme.palette.grey[(idx * 100 + 400) as keyof Color] as string,\n  }));\n\n  return (\n    <Box flexGrow={1}>\n      <ScrollToTop />\n      <PageTitle title=\"Statistik\" />\n      <Card className={classes.card}>\n        <CardContent>\n          <ToggleButtonGroup\n            exclusive\n            value={period}\n            onChange={handlePeriodChange}\n            className={classes.rangeSelectorGroup}\n          >\n            <ToggleButton className={classes.rangeSelectorButton} value=\"all\">\n              Allt\n            </ToggleButton>\n            <ToggleButton className={classes.rangeSelectorButton} value=\"year\">\n              {new Date().getFullYear()}\n            </ToggleButton>\n            <ToggleButton className={classes.rangeSelectorButton} value=\"20\">\n              Sista 20\n            </ToggleButton>\n            <ToggleButton className={classes.rangeSelectorButton} value=\"5\">\n              Sista 5\n            </ToggleButton>\n          </ToggleButtonGroup>\n          <FormControl className={classes.venueSelector}>\n            <InputLabel>Välj bana</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={selectedVenue}\n              onChange={handleVenueChange}\n            >\n              {venues.map((venue, idx) => (\n                <MenuItem value={venue.id} key={`select-venue-${venue.id}`}>\n                  {venue.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </CardContent>\n      </Card>\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Typography variant=\"h6\">Visar data för {countGames} spel</Typography>\n      </Box>\n\n      <CardHeader title=\"Top 5\" />\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        className={classes.card}\n      >\n        {top5.map((score) => (\n          <Chip\n            color=\"primary\"\n            variant=\"outlined\"\n            clickable\n            key={`top-score-${score.id}`}\n            component={Link}\n            to={`/games/${score.id}`}\n            label={score.score}\n          />\n        ))}\n      </Box>\n      <CardHeader title=\"Poäng - utveckling\" />\n      <Card className={clsx(classes.card, classes.chartCard)}>\n        <ResponsiveContainer height={200} width=\"100%\">\n          <LineChart data={scoreSeries}>\n            <CartesianGrid\n              strokeDasharray=\"3 3\"\n              vertical={false}\n              stroke={theme.palette.text.hint}\n            />\n            {/* <XAxis tick={false} /> */}\n            <YAxis\n              mirror={true}\n              axisLine={false}\n              tickLine={false}\n              stroke={theme.palette.text.hint}\n            />\n            <ReferenceLine y={scoreAvg} stroke=\"red\" strokeDasharray=\"3 3\" />\n            <Line\n              isAnimationActive={false}\n              dot={false}\n              type=\"step\"\n              dataKey=\"value\"\n              stroke={theme.palette.getContrastText(\n                theme.palette.background.paper\n              )}\n              //   strokeWidth={2}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Card>\n      <CardHeader title=\"Träffsäkerhet - utveckling\" />\n      <Card className={clsx(classes.card, classes.chartCard)}>\n        <ResponsiveContainer height={200} width=\"100%\">\n          <LineChart data={accPctByDistanceSeries}>\n            <CartesianGrid\n              strokeDasharray=\"3 3\"\n              vertical={false}\n              stroke={theme.palette.text.hint}\n            />\n            {/* <XAxis dataKey=\"name\" /> */}\n            <YAxis\n              mirror={true}\n              axisLine={false}\n              tickLine={false}\n              stroke={theme.palette.text.hint}\n            />\n\n            <Legend\n              iconType=\"plainline\"\n              formatter={(value, entry, index) => {\n                return positionLabel(venue.layout[Number(value)]);\n              }}\n            />\n            <Line\n              isAnimationActive={false}\n              dot={false}\n              type=\"monotone\"\n              dataKey=\"0\"\n              stroke={lime[500]}\n            />\n            <Line\n              isAnimationActive={false}\n              dot={false}\n              type=\"monotone\"\n              dataKey=\"1\"\n              stroke={lightGreen[500]}\n            />\n            <Line\n              isAnimationActive={false}\n              dot={false}\n              type=\"monotone\"\n              dataKey=\"2\"\n              stroke={pink[500]}\n            />\n            <Line\n              isAnimationActive={false}\n              dot={false}\n              type=\"monotone\"\n              dataKey=\"3\"\n              stroke={lightBlue[500]}\n            />\n            <Line\n              isAnimationActive={false}\n              dot={false}\n              type=\"monotone\"\n              dataKey=\"4\"\n              stroke={deepOrange[500]}\n            />\n            <Line\n              isAnimationActive={false}\n              dot={false}\n              type=\"monotone\"\n              dataKey=\"5\"\n              stroke={blue[500]}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </Card>\n      <CardHeader title=\"Träffsäkerhet\" />\n      <Card className={classes.card}>\n        <Box display=\"flex\">\n          <PercentPanel title=\"Totalt\" value={totalPct} />\n          <PercentPanel title=\"Första\" value={totalPctFirstPutts} />\n          <PercentPanel title=\"Sista\" value={totalPctLastPutts} />\n        </Box>\n      </Card>\n      <CardHeader title=\"Träffar per distans\" />\n      <Card classes={{ root: classes.card }}>\n        <ResponsiveContainer width=\"100%\" height={180}>\n          <RadialBarChart\n            innerRadius=\"20%\"\n            outerRadius=\"80%\"\n            data={positionPercentages}\n            startAngle={90}\n            endAngle={-270}\n            cx=\"25%\"\n            margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n          >\n            <PolarAngleAxis\n              type=\"number\"\n              // @ts-ignore\n              domain={[0, 100]}\n              angleAxisId={0}\n              tick={false}\n            />\n            <RadialBar\n              label={false}\n              background\n              dataKey=\"value\"\n              legendType=\"square\"\n            />\n            <Legend\n              iconSize={10}\n              layout=\"vertical\"\n              verticalAlign=\"middle\"\n              align=\"right\"\n            />\n          </RadialBarChart>\n        </ResponsiveContainer>\n      </Card>\n      <Box style={{ height: 100 }}></Box>\n    </Box>\n  );\n};\n\nconst selectGames = (period: Periods, venueId: string): Engine[] => {\n  let games = storage\n    .listGames()\n    .filter((game) => game.venueId === venueId && game.endTime !== undefined);\n  if (period === \"year\") {\n    games = games.filter(\n      (game) =>\n        new Date(game.startTime).getFullYear() === new Date().getFullYear()\n    );\n  } else if ([\"20\", \"5\"].some((p) => p === period)) {\n    games = games.slice(0, Number(period));\n  }\n  return games.map((game) => new Engine(game)).reverse();\n};\n\nconst buildStats = (period: Periods, venueId: string) => {\n  const games = selectGames(period, venueId);\n  const top5 = Array.from(games)\n    .sort((a, b) => b.scoreGame() - a.scoreGame())\n    .slice(0, 5)\n    .map((e) => ({\n      id: e.game.id,\n      score: e.scoreGame(),\n      startDate: e.game.startTime,\n    }));\n\n  const scoreSeries = games.map((e) => ({\n    name: e.game.id,\n    date: new Date(e.game.startTime),\n    value: e.scoreGame(),\n  }));\n\n  const scoreAvg =\n    scoreSeries.reduce((acc, { value }) => acc + value, 0) / games.length;\n\n  const totalPct =\n    (games.reduce((acc, e) => acc + e.succcessCount(), 0) /\n      (games.length * 6 * 6)) *\n    100;\n\n  const totalPctByDistance = games\n    .reduce(\n      (acc, e) => {\n        const counts = e.positionCount();\n        return acc.map((ap, idx) => ap + counts[idx]);\n      },\n      [0, 0, 0, 0, 0, 0]\n    )\n    .map((count) => (count / (6 * games.length)) * 100);\n\n  const pctByDistanceSeries = games.map((e) => {\n    const pcts = e.positionPercent().map(Number);\n    return {\n      game: e.game,\n      position1: pcts[0],\n      position2: pcts[1],\n      position3: pcts[2],\n      position4: pcts[3],\n      position5: pcts[4],\n      position6: pcts[5],\n    };\n  });\n\n  const countByDistanceSeries = games.map((e) => e.positionCount().map(Number));\n  for (let i = 1; i < countByDistanceSeries.length; i++) {\n    countByDistanceSeries[i] = countByDistanceSeries[i].map(\n      (p, jdx) => p + countByDistanceSeries[i - 1][jdx]\n    );\n  }\n  const accPctByDistanceSeries = countByDistanceSeries\n    .map((gameCounts, idx) =>\n      gameCounts.map((count) => (count / (6 * (idx + 1))) * 100)\n    )\n    .map((pcts) => {\n      return {\n        0: pcts[0],\n        1: pcts[1],\n        2: pcts[2],\n        3: pcts[3],\n        4: pcts[4],\n        5: pcts[5],\n      };\n    });\n\n  const bonusPuttsCounts = games.reduce(\n    (acc, e) => {\n      const { firstPositionCount, lastPositionCount } = e.bonusPositionCount();\n      return {\n        first: acc.first + firstPositionCount,\n        last: acc.last + lastPositionCount,\n      };\n    },\n    { first: 0, last: 0 }\n  );\n\n  const totalPctFirstPutts =\n    (bonusPuttsCounts.first / (6 * games.length)) * 100;\n  const totalPctLastPutts = (bonusPuttsCounts.last / (6 * games.length)) * 100;\n\n  return {\n    countGames: games.length,\n    top5,\n    scoreAvg,\n    scoreSeries,\n    totalPct,\n    totalPctByDistance,\n    pctByDistanceSeries,\n    accPctByDistanceSeries,\n    totalPctFirstPutts,\n    totalPctLastPutts,\n  };\n};\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Box from \"@material-ui/core/Box\";\nimport { Toolbar, Button } from \"@material-ui/core\";\nimport Attempt from \"./Attempt\";\nimport Score from \"./Score\";\nimport { useConfirm } from \"material-ui-confirm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { positionLabel } from \"./helpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  position: {\n    textAlign: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    color: theme.palette.text.hint,\n  },\n}));\n\ntype VirtualPosition = [boolean, boolean, boolean, boolean, boolean];\n\ntype VirtualGame = [\n  VirtualPosition,\n  VirtualPosition,\n  VirtualPosition,\n  VirtualPosition,\n  VirtualPosition\n];\n\nconst makeInitState = (): VirtualGame =>\n  [...Array(6)].map(() => [...Array(5)].map(() => false)) as VirtualGame;\n\nconst layout = [25, 30, 35, 40, 45, 50];\n\nexport default function Play() {\n  const [game, setGame] = useState<VirtualGame>(makeInitState());\n  const confirm = useConfirm();\n  const classes = useStyles();\n\n  const toggleAttempt = (i: number, j: number) => {\n    game[i][j] = !game[i][j];\n    setGame(JSON.parse(JSON.stringify(game)));\n  };\n\n  const reset = () => {\n    confirm({ title: \"Är du säker?\" })\n      .then(() => {\n        setGame(makeInitState());\n      })\n      .catch(() => {});\n  };\n\n  const scoreCell = (i: number): number => {\n    if (i <= 1) {\n      return 1;\n    }\n    if (i <= 3) {\n      return 2;\n    }\n    return 3;\n  };\n\n  const scoreGame = () =>\n    game.reduce(\n      (acc, row, positionIdx) =>\n        acc + row.filter(Boolean).length * scoreCell(positionIdx),\n      0\n    );\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flexGrow={1}>\n      {game.map((row, i) => (\n        <Box\n          flexGrow={1}\n          flexShrink={0}\n          flexBasis={0}\n          display=\"flex\"\n          key={`attepmt-row-${i}`}\n        >\n          <Box\n            flexGrow={2}\n            flexShrink={0}\n            flexBasis={0}\n            display=\"flex\"\n            justifyContent=\"center\"\n            key={`position-${i}`}\n          >\n            <Box alignSelf=\"center\" className={classes.position}>\n              {positionLabel(layout[i])}\n            </Box>\n          </Box>\n          {row.map((attempt, j) => (\n            <Attempt\n              round={i}\n              bonusPosition={false}\n              position={i}\n              rowBonus={false}\n              score={scoreCell(i)}\n              success={attempt}\n              key={`attempt-${i}-${j}`}\n              onClick={() => toggleAttempt(i, j)}\n              onSwipe={() => {}}\n              staticBackground={true}\n            />\n          ))}\n        </Box>\n      ))}\n\n      <Box>\n        <Toolbar>\n          <Box flexGrow={1}></Box>\n          <Button onClick={reset}>Rensa</Button>\n        </Toolbar>\n      </Box>\n      <Box flexGrow={1}>\n        <Score score={scoreGame()} />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Venues from \"./Venues\";\nimport Storage from \"./api\";\nimport { Switch, Route, Redirect, Link, useHistory } from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { Toolbar } from \"@material-ui/core\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TrackChangesIcon from \"@material-ui/icons/TrackChanges\";\nimport GolfCourseIcon from \"@material-ui/icons/GolfCourse\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Games from \"./Games\";\nimport Start from \"./Start\";\nimport spinndisckFkLogo from \"./logo-footer.png\";\nimport VenueSelector from \"./VenueSelector\";\nimport Play from \"./Play\";\nimport Settings from \"./Settings\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ConfirmProvider } from \"material-ui-confirm\";\nimport GameDetails from \"./GameDetails\";\nimport VenueDetails from \"./VenueDetails\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport Stats from \"./Stats\";\nimport PlayVirtual from \"./PlayVirtual\";\nimport ReactGA from \"react-ga\";\n\nconst storage = new Storage();\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    height: \"100vh\",\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  drawerPaper: {\n    width: 250,\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(9),\n    right: theme.spacing(2),\n    zIndex: 1,\n  },\n  logo: {\n    position: \"absolute\",\n    right: 0,\n    width: 150,\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [darkMode, setDarkMode] = React.useState(\n    storage.getSettings().darkMode\n  );\n  const [venueSelectorOpen, setVenueSelectorOpen] = React.useState(false);\n  useEffect(() => {\n    ReactGA.initialize(\"UA-166285768-1\");\n  });\n\n  useEffect(() => {\n    return history.listen((location) => {\n      ReactGA.pageview(location.pathname);\n    });\n  }, [history]);\n\n  const closeDrawer = () => {\n    setDrawerOpen(false);\n  };\n\n  const createGame = (venueId: string | null) => {\n    setVenueSelectorOpen(false);\n    if (!venueId) {\n      return;\n    }\n    const game = storage.createGame(venueId);\n    history.push(`/play/${game.id}`);\n  };\n\n  const handleAddGame = () => {\n    const activeGame = storage.activeGame();\n    if (activeGame) {\n      return history.push(`/play/${activeGame.id}`);\n    }\n    setVenueSelectorOpen(true);\n  };\n\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ConfirmProvider>\n        <Box display=\"flex\" className={classes.wrapper} flexDirection=\"column\">\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={() => setDrawerOpen(true)}\n              >\n                <MenuIcon />\n              </IconButton>\n              {/* <img\n                alt=\"spinndisk fk\"\n                src={spinndisckFkLogo}\n                className={classes.logo}\n              /> */}\n              <Route\n                path={[\n                  \"/start\",\n                  \"/games\",\n                  \"/games\",\n                  \"/settings\",\n                  \"/venues\",\n                  \"/stats\",\n                ]}\n              >\n                <Fab\n                  className={classes.fab}\n                  color=\"secondary\"\n                  onClick={handleAddGame}\n                >\n                  <AddIcon />\n                </Fab>\n              </Route>\n            </Toolbar>\n          </AppBar>\n          <VenueSelector open={venueSelectorOpen} onClose={createGame} />\n          <SwipeableDrawer\n            anchor=\"left\"\n            open={drawerOpen}\n            disableBackdropTransition={true}\n            onClose={() => setDrawerOpen(false)}\n            onOpen={() => setDrawerOpen(true)}\n            classes={{ paper: classes.drawerPaper }}\n          >\n            <ListItem button component={Link} to=\"/\" onClick={closeDrawer}>\n              <ListItemIcon>\n                <TrackChangesIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Spela\" />\n            </ListItem>\n            <Divider />\n            <ListItem button component={Link} to=\"/games\" onClick={closeDrawer}>\n              <ListItemIcon>\n                <HistoryIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Resultat\" />\n            </ListItem>\n            <ListItem button component={Link} to=\"/stats\" onClick={closeDrawer}>\n              <ListItemIcon>\n                <TimelineIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Statistik\" />\n            </ListItem>\n            <ListItem\n              button\n              component={Link}\n              to=\"/venues\"\n              onClick={closeDrawer}\n            >\n              <ListItemIcon>\n                <GolfCourseIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Banor\" />\n            </ListItem>\n            <Divider />\n            <ListItem\n              button\n              component={Link}\n              to=\"/settings\"\n              onClick={closeDrawer}\n            >\n              <ListItemIcon>\n                <SettingsIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Inställningar\" />\n            </ListItem>\n          </SwipeableDrawer>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/start\" />\n            </Route>\n            <Route exact path=\"/start\">\n              <Start />\n            </Route>\n            <Route path=\"/play/:id\">\n              <Play />\n            </Route>\n            <Route path=\"/play-virtual\">\n              <PlayVirtual />\n            </Route>\n            <Route path=\"/games/:id\">\n              <GameDetails />\n            </Route>\n            <Route path=\"/games\">\n              <Games />\n            </Route>\n            <Route path=\"/stats\">\n              <Stats />\n            </Route>\n            <Route path=\"/settings\">\n              <Settings toggleDarkMode={setDarkMode} />\n            </Route>\n            <Route path=\"/venues/:id\">\n              <VenueDetails />\n            </Route>\n            <Route path=\"/venues\">\n              <Venues />\n            </Route>\n          </Switch>\n          <Toolbar />\n        </Box>\n      </ConfirmProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"typeface-roboto\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router basename=\"/\">\n    <App />\n  </Router>,\n  // </React.StrictMode>\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}